{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\msi laptop\\\\OneDrive - Universitas Islam Indonesia\\\\matchcare\\\\matchCare-system2\\\\frontend\\\\src\\\\contexts\\\\GuestContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useReducer, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GuestContext = /*#__PURE__*/createContext();\nconst initialState = {\n  sessionId: null,\n  profile: null,\n  preferences: {\n    avoidedIngredients: [],\n    preferredIngredients: [],\n    skinType: null,\n    skinConcerns: [],\n    sensitivities: []\n  },\n  isActive: false,\n  viewedProducts: []\n};\nfunction guestReducer(state, action) {\n  switch (action.type) {\n    case 'SET_SESSION':\n      return {\n        ...state,\n        sessionId: action.payload.sessionId,\n        isActive: true\n      };\n    case 'UPDATE_PROFILE':\n      return {\n        ...state,\n        profile: {\n          ...state.profile,\n          ...action.payload\n        }\n      };\n    case 'UPDATE_PREFERENCES':\n      return {\n        ...state,\n        preferences: {\n          ...state.preferences,\n          ...action.payload\n        }\n      };\n    case 'ADD_VIEWED_PRODUCT':\n      return {\n        ...state,\n        viewedProducts: [...state.viewedProducts, action.payload].slice(-50)\n      };\n    case 'CLEAR_SESSION':\n      return initialState;\n    default:\n      return state;\n  }\n}\nexport function GuestProvider({\n  children\n}) {\n  _s();\n  const [state, dispatch] = useReducer(guestReducer, initialState);\n  useEffect(() => {\n    // Initialize guest session\n    const existingSessionId = localStorage.getItem('guest_session_id');\n    if (existingSessionId) {\n      dispatch({\n        type: 'SET_SESSION',\n        payload: {\n          sessionId: existingSessionId\n        }\n      });\n    } else {\n      const newSessionId = crypto.randomUUID();\n      localStorage.setItem('guest_session_id', newSessionId);\n      dispatch({\n        type: 'SET_SESSION',\n        payload: {\n          sessionId: newSessionId\n        }\n      });\n    }\n  }, []);\n  const updateProfile = profileData => {\n    dispatch({\n      type: 'UPDATE_PROFILE',\n      payload: profileData\n    });\n  };\n  const updatePreferences = preferences => {\n    dispatch({\n      type: 'UPDATE_PREFERENCES',\n      payload: preferences\n    });\n  };\n  const addViewedProduct = productId => {\n    if (!state.viewedProducts.includes(productId)) {\n      dispatch({\n        type: 'ADD_VIEWED_PRODUCT',\n        payload: productId\n      });\n    }\n  };\n  const clearSession = () => {\n    localStorage.removeItem('guest_session_id');\n    dispatch({\n      type: 'CLEAR_SESSION'\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(GuestContext.Provider, {\n    value: {\n      ...state,\n      updateProfile,\n      updatePreferences,\n      addViewedProduct,\n      clearSession\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 5\n  }, this);\n}\n_s(GuestProvider, \"bgCdjuTOmPdSBRwTap80EFd9Y3U=\");\n_c = GuestProvider;\nexport const useGuest = () => {\n  _s2();\n  const context = useContext(GuestContext);\n  if (!context) {\n    throw new Error('useGuest must be used within a GuestProvider');\n  }\n  return context;\n};\n_s2(useGuest, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"GuestProvider\");","map":{"version":3,"names":["React","createContext","useContext","useReducer","useEffect","jsxDEV","_jsxDEV","GuestContext","initialState","sessionId","profile","preferences","avoidedIngredients","preferredIngredients","skinType","skinConcerns","sensitivities","isActive","viewedProducts","guestReducer","state","action","type","payload","slice","GuestProvider","children","_s","dispatch","existingSessionId","localStorage","getItem","newSessionId","crypto","randomUUID","setItem","updateProfile","profileData","updatePreferences","addViewedProduct","productId","includes","clearSession","removeItem","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useGuest","_s2","context","Error","$RefreshReg$"],"sources":["C:/Users/msi laptop/OneDrive - Universitas Islam Indonesia/matchcare/matchCare-system2/frontend/src/contexts/GuestContext.js"],"sourcesContent":["import React, { createContext, useContext, useReducer, useEffect } from 'react';\r\n\r\nconst GuestContext = createContext();\r\n\r\nconst initialState = {\r\n  sessionId: null,\r\n  profile: null,\r\n  preferences: {\r\n    avoidedIngredients: [],\r\n    preferredIngredients: [],\r\n    skinType: null,\r\n    skinConcerns: [],\r\n    sensitivities: []\r\n  },\r\n  isActive: false,\r\n  viewedProducts: []\r\n};\r\n\r\nfunction guestReducer(state, action) {\r\n  switch (action.type) {\r\n    case 'SET_SESSION':\r\n      return {\r\n        ...state,\r\n        sessionId: action.payload.sessionId,\r\n        isActive: true\r\n      };\r\n    case 'UPDATE_PROFILE':\r\n      return {\r\n        ...state,\r\n        profile: { ...state.profile, ...action.payload }\r\n      };\r\n    case 'UPDATE_PREFERENCES':\r\n      return {\r\n        ...state,\r\n        preferences: { ...state.preferences, ...action.payload }\r\n      };\r\n    case 'ADD_VIEWED_PRODUCT':\r\n      return {\r\n        ...state,\r\n        viewedProducts: [...state.viewedProducts, action.payload].slice(-50)\r\n      };\r\n    case 'CLEAR_SESSION':\r\n      return initialState;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport function GuestProvider({ children }) {\r\n  const [state, dispatch] = useReducer(guestReducer, initialState);\r\n\r\n  useEffect(() => {\r\n    // Initialize guest session\r\n    const existingSessionId = localStorage.getItem('guest_session_id');\r\n    if (existingSessionId) {\r\n      dispatch({\r\n        type: 'SET_SESSION',\r\n        payload: { sessionId: existingSessionId }\r\n      });\r\n    } else {\r\n      const newSessionId = crypto.randomUUID();\r\n      localStorage.setItem('guest_session_id', newSessionId);\r\n      dispatch({\r\n        type: 'SET_SESSION',\r\n        payload: { sessionId: newSessionId }\r\n      });\r\n    }\r\n  }, []);\r\n\r\n  const updateProfile = (profileData) => {\r\n    dispatch({ type: 'UPDATE_PROFILE', payload: profileData });\r\n  };\r\n\r\n  const updatePreferences = (preferences) => {\r\n    dispatch({ type: 'UPDATE_PREFERENCES', payload: preferences });\r\n  };\r\n\r\n  const addViewedProduct = (productId) => {\r\n    if (!state.viewedProducts.includes(productId)) {\r\n      dispatch({ type: 'ADD_VIEWED_PRODUCT', payload: productId });\r\n    }\r\n  };\r\n\r\n  const clearSession = () => {\r\n    localStorage.removeItem('guest_session_id');\r\n    dispatch({ type: 'CLEAR_SESSION' });\r\n  };\r\n\r\n  return (\r\n    <GuestContext.Provider\r\n      value={{\r\n        ...state,\r\n        updateProfile,\r\n        updatePreferences,\r\n        addViewedProduct,\r\n        clearSession\r\n      }}\r\n    >\r\n      {children}\r\n    </GuestContext.Provider>\r\n  );\r\n}\r\n\r\nexport const useGuest = () => {\r\n  const context = useContext(GuestContext);\r\n  if (!context) {\r\n    throw new Error('useGuest must be used within a GuestProvider');\r\n  }\r\n  return context;\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}